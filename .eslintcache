[{"C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\index.js":"1","C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\App.js":"2","C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\components\\index.js":"3","C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\components\\Chart\\Chart.jsx":"4","C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\components\\Cards\\Cards.jsx":"5","C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\components\\CountryPicker\\CountryPicker.jsx":"6","C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\api\\index.js":"7"},{"size":151,"mtime":1607217742287,"results":"8","hashOfConfig":"9"},{"size":600,"mtime":1607379441625,"results":"10","hashOfConfig":"9"},{"size":175,"mtime":1607220274381,"results":"11","hashOfConfig":"9"},{"size":1153,"mtime":1607557543165,"results":"12","hashOfConfig":"9"},{"size":2537,"mtime":1607382684355,"results":"13","hashOfConfig":"9"},{"size":798,"mtime":1607885167929,"results":"14","hashOfConfig":"9"},{"size":1138,"mtime":1607884584097,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"lhm0i4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\index.js",[],["33","34"],"C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\App.js",[],"C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\components\\index.js",[],"C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\components\\Chart\\Chart.jsx",["35"],"import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    }\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = (\r\n    dailyData.length\r\n    ? (\r\n    <Line \r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [{\r\n          data: dailyData.map(({ confirmed }) => confirmed),\r\n          label: 'Infected',\r\n          borderColor: 'rgb(225, 255, 0)',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n          fill: true,\r\n        }, {\r\n          data: dailyData.map(({ deaths }) => deaths),\r\n          label: 'Deaths',\r\n          borderColor: 'rgba(255, 0, 0, 0.5)',\r\n          backgroundColor: 'rgba(255, 0, 0, 0.7)',\r\n          fill: true,\r\n        }],\r\n      }}\r\n    />) : null\r\n  );\r\n\r\n  return(\r\n    <div className= {styles.container}>\r\n      {lineChart}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;","C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\components\\Cards\\Cards.jsx",["36"],"import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ( {data : { confirmed, recovered, deaths, lastUpdate }}) => {\r\n  if(!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n  return(\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp \r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp \r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp \r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;","C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\components\\CountryPicker\\CountryPicker.jsx",[],"C:\\Users\\CEK DOVLO\\Documents\\Kofi\\Projects\\covid_19_tracker\\src\\api\\index.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":16,"nodeType":"43","messageId":"44","endLine":3,"endColumn":19},{"ruleId":"41","severity":1,"message":"45","line":2,"column":47,"nodeType":"43","messageId":"44","endLine":2,"endColumn":61},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Bar' is defined but never used.","Identifier","unusedVar","'StylesProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]